version: '3.8'
services:
  app:
    image: bitnami/php-fpm:8.0
    restart: unless-stopped
    environment:
      PHP_IDE_CONFIG: 'serverName=lara_shop'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - './:/app:delegated'
      - './.docker/php/dev/xdebug.ini:/opt/bitnami/php/etc/conf.d/docker-php-ext-xdebug.ini:ro'
      - './node_modules:/app/node_modules:ro'
    depends_on:
      - mariadb
      - redis

  nginx:
    image: nginx
    volumes:
      #- ./templates:/etc/nginx/templates
      - './:/app:ro'
      - './.docker/nginx/dev/:/etc/nginx/conf.d:ro'
    ports:
      - '${DOCKER_HTTP_PORT:-80}:80'
      - '${DOCKER_HTTPS_PORT:-443}:443'
    environment:
      - NGINX_HOST=localhost
    restart: unless-stopped

  mariadb:
    image: bitnami/mariadb:10
    restart: unless-stopped
    environment:
      - MARIADB_USER=admin
      - MARIADB_PASSWORD=secret
      - MARIADB_ROOT_PASSWORD=rootsecret123
      - MARIADB_DATABASE=shop
      - MARIADB_SKIP_TEST_DB=yes
    ports:
      - '${DOCKER_HTTP_PORT:-3307}:3306'
    volumes:
      - './.local_data/sql:/bitnami/mariadb'

  mariadb_test:
    image: bitnami/mariadb:10
    restart: unless-stopped
    environment:
      - MARIADB_USER=admin
      - MARIADB_PASSWORD=secret
      - MARIADB_ROOT_PASSWORD=rootsecret123
      - MARIADB_DATABASE=shop
      - MARIADB_SKIP_TEST_DB=yes
    ports:
      - '${DOCKER_HTTP_PORT:-3308}:3306'

  redis:
    image: redis:6.2.5-alpine
    restart: unless-stopped
    ports:
      - '${DOCKER_REDIS_PORT:-6380}:6379'
    command:
      - '--appendonly yes'
      - '--databases'
      - '512'
    volumes:
      - './.local_data/redis:/data'

  mailhog:
    image: mailhog/mailhog
    restart: on-failure
    environment:
      MH_UI_WEB_PATH: mailhog

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost

  schema-registry:
    image: confluentinc/cp-schema-registry:7.0.1
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: "*"
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: "GET,POST,PUT,OPTIONS"
      SCHEMA_REGISTRY_ACCESS_CONTROL_SKIP_OPTIONS: false

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9089:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"
